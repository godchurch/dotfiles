" General {{{
" ---------------------------------------------------------------------
" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
set nocompatible

" Have Vim jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
if has("autocmd")
  filetype plugin indent on
endif

" Set to auto read when a file is changed from the outside
set autoread

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Do case insensitive matching
set ignorecase

" Do smart case matching
set smartcase

" Incremental search
set incsearch

" How many tenths of a second to blink when matching brackets
set mat=2

" Display a menu in : when tab shows multiple possibilities.
set wildmenu

" }}}
" Vim User Interface {{{
" ---------------------------------------------------------------------
" display line numbers
set number

" precede each line with its line number
set relativenumber

" Set 7 lines to the cursor - when moving vertically using j/k
set scrolloff=5

"Always show current position
set ruler

" Hide buffers when they are abandoned
set hidden

" Highlight search results
set hlsearch

" Show matching brackets.
set showmatch

" Display VIM's current mode; insert and visual.
set showmode

" Set the way in which folds are registered.
set foldmethod=marker

" Add a bit extra margin to the left
set foldcolumn=1

" }}}
" Colors And Fonts {{{
" ---------------------------------------------------------------------
" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" Set colorscheme
if &t_Co >= 16
	try
		colorscheme solarized
	catch
	endtry
else
	try
		colorscheme default
	catch
	endtry
endif

set background=dark

" }}}
" Text, Tab And Indent Related {{{
" ---------------------------------------------------------------------
" Be smart when using tabs
set smarttab

" 1 tab == 4 spaces
set shiftwidth=4
set tabstop=4

" Linebreak on 500 characters
set lbr
set tw=500

" Auto indent
set ai

" Smart indent
set si

"Do not wrap lines
set nowrap

" Do not wrap words
set textwidth=0

" }}}
" Backups And Saving {{{
" ---------------------------------------------------------------------
" Turn backup stuff off
set nobackup
set nowb
set noswapfile

" Delete trailing white space on save
func! DeleteTrailingWS()
	exe "normal mz"
	%s/\s\+$//ge
	exe "normal `z"
endfunc
autocmd BufWrite * :call DeleteTrailingWS()

" }}}
" Moving Around, Tabs, Windows And Buffers {{{
" ---------------------------------------------------------------------

" }}}
" Status Line {{{
" ---------------------------------------------------------------------
" Always show the status line
set laststatus=2

" Format the status line
set statusline=\ %F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l\ \ Column:\ %c

" }}}
